[33mtag v1.0.0[m
Tagger: chardiegit <chris.hardie@ukaea.uk>
Date:   Wed May 25 15:24:35 2022 +0100

Version 1.0.0

[33mcommit 4d8d30dc6dc4ab9555af83a92fa52b8d1e459cf4[m[33m ([m[1;36mHEAD -> [m[1;32mdevelop[m[33m, [m[1;33mtag: v1.0.0[m[33m, [m[1;31morigin/develop[m[33m)[m
Author: chardiegit <chris.hardie@ukaea.uk>
Date:   Wed May 25 15:23:56 2022 +0100

    Add README

[1mdiff --git a/.github/workflows/README.md b/.github/workflows/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/README.md b/README.md[m
[1mdeleted file mode 100644[m
[1mindex c70e78a..0000000[m
[1m--- a/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-# Introduction[m
[31m-[m
[31m-This is a template software project repository used by the [Intermediate Research Software Development Skills In Python](https://github.com/carpentries-incubator/python-intermediate-development).[m
[31m-[m
[31m-## Purpose[m
[31m-[m
[31m-This repository is intended to be used as a code template which is copied by learners at [Intermediate Research Software Development Skills In Python](https://github.com/carpentries-incubator/python-intermediate-development) workshops.[m
[31m-This can be done using the `Use this template` button towards the top right of this repo's GitHub page.[m
[31m-[m
[31m-This software project is not finished, is currently failing to run and contains some code style issues. It is used as a starting point for the course - issues will be fixed and code will be added in a number of places during the course by learners in their own copies of the repository, as course topics are introduced.[m
[31m-[m
[31m-## Tests[m
[31m-[m
[31m-Several tests have been implemented already, some of which are currently failing.[m
[31m-These failing tests set out the requirements for the additional code to be implemented during the workshop.[m
[31m-[m
[31m-The tests should be run using `pytest`, which will be introduced during the workshop.[m
[1mdiff --git a/inflammation/serializers.py b/inflammation/serializers.py[m
[1mnew file mode 100644[m
[1mindex 0000000..4092517[m
[1m--- /dev/null[m
[1m+++ b/inflammation/serializers.py[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32m# file: inflammation/serializers.py[m
[32m+[m
[32m+[m[32mfrom inflammation import models[m
[32m+[m[32mimport json[m
[32m+[m
[32m+[m[32mclass PatientSerializer(Serializer):[m
[32m+[m[32m    model = models.Patient[m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def serialize(cls, instances):[m
[32m+[m[32m        return [{[m
[32m+[m[32m            'name': instance.name,[m
[32m+[m[32m            'observations': ObservationSerializer.serialize(instance.observations),[m
[32m+[m[32m        } for instance in instances][m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def deserialize(cls, data):[m
[32m+[m[32m        instances = [][m
[32m+[m
[32m+[m[32m        for item in data:[m
[32m+[m[32m            item['observations'] = ObservationSerializer.deserialize(item.pop('observations'))[m
[32m+[m[32m            instances.append(cls.model(**item))[m
[32m+[m
[32m+[m[32m        return instances[m
[32m+[m
[32m+[m[32mclass PatientJSONSerializer(PatientSerializer):[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def save(cls, instances, path):[m
[32m+[m[32m        with open(path, 'w') as jsonfile:[m
[32m+[m[32m            json.dump(cls.serialize(instances), jsonfile)[m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def load(cls, path):[m
[32m+[m[32m        with open(path) as jsonfile:[m
[32m+[m[32m            data = json.load(jsonfile)[m
[32m+[m
[32m+[m[32m        return cls.deserialize(data)[m
[32m+[m
[32m+[m[32mclass Serializer:[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def serialize(cls, instances):[m
[32m+[m[32m        raise NotImplementedError[m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def save(cls, instances, path):[m
[32m+[m[32m        raise NotImplementedError[m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def deserialize(cls, data):[m
[32m+[m[32m        raise NotImplementedError[m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def load(cls, path):[m
[32m+[m[32m        raise NotImplementedError[m
[32m+[m
[32m+[m
[32m+[m[32mclass ObservationSerializer(Serializer):[m
[32m+[m[32m    model = models.Observation[m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def serialize(cls, instances):[m
[32m+[m[32m        return [{[m
[32m+[m[32m            'day': instance.day,[m
[32m+[m[32m            'value': instance.value,[m
[32m+[m[32m        } for instance in instances][m
[32m+[m
[32m+[m[32m    @classmethod[m
[32m+[m[32m    def deserialize(cls, data):[m
[32m+[m[32m        return [cls.model(**d) for d in data][m
[1mdiff --git a/tests/test_serialisers.py b/tests/test_serialisers.py[m
[1mnew file mode 100644[m
[1mindex 0000000..373b945[m
[1m--- /dev/null[m
[1m+++ b/tests/test_serialisers.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# file: tests/test_serializers.py[m
[32m+[m
[32m+[m[32mfrom inflammation import models, serializers[m
[32m+[m
[32m+[m[32mdef test_patients_json_serializer():[m
[32m+[m[32m    # Create some test data[m
[32m+[m[32m    patients = [[m
[32m+[m[32m        models.Patient('Alice', [models.Observation(i, i + 1) for i in range(3)]),[m
[32m+[m[32m        models.Patient('Bob', [models.Observation(i, 2 * i) for i in range(3)]),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    # Save and reload the data[m
[32m+[m[32m    output_file = 'patients.json'[m
[32m+[m[32m    serializers.PatientJSONSerializer.save(patients, output_file)[m
[32m+[m[32m    patients_new = PatientJSONSerializer.load(output_file)[m
[32m+[m
[32m+[m[32m    # Check that we've got the same data back[m
[32m+[m[32m    for patient_new, patient in zip(patients_new, patients):[m
[32m+[m[32m        assert patient_new.name == patient.name[m
[32m+[m
[32m+[m[32m        for obs_new, obs in zip(patient_new.observations, patient.observations):[m
[32m+[m[32m            assert obs_new.day == obs.day[m
[32m+[m[32m            assert obs_new.value == obs.value[m
\ No newline at end of file[m
